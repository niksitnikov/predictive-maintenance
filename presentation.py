import streamlit as st
import reveal_slides as rs


def presentation_page():
    st.title("Презентация проекта")

    # Содержание презентации в формате Markdown
    presentation_markdown = """
    # Прогнозирование отказов оборудования
    ---
    ## Введение
    - Описание задачи и датасета.
    - Цель: предсказать отказ оборудования (Target = 1) или его отсутствие (Target = 0).
    - Задачи:
    1. Разработать модель машинного обучения.
    2. Внедрить кросс-вадидацию и оптимизациию с optuna в процесс обучения модели.
    3. Внедрить детальный обзор анализа данных.
    4. Внедрить MLOps.
    - Описание датасета: датасет "AI4I 2020 Predictive Maintenance Dataset" содержит синтетические данные, моделирующие задачу предиктивного
обслуживания оборудования. Датасет состоит из 10 000 записей, каждая из которых
описывает состояние оборудования и включает 14 признаков.
    ---
    ## Этапы работы
    1. Загрузка данных.
    2. Предобработка данных.
    3. Обучение модели.
    4. Равзвертывание сервиса инференса.
    5. Оценка модели.
    6. Визуализация результатов.
    ---
    ## Streamlit-приложение
    - Основная страница: анализ данных и предсказания.
    - Детальный анализ данных: графики распределения признаков, корреляционной матрицы, зависимости признков и распределниея отказов. 
    - Страница с презентацией: описание проекта.
    ---
    ## Заключение
    - Итоги и возможные улучшения.
    - Итоги: разработана модель машинного обучения XGBoost для бинарной классификации отказов промышленного оборудования, доступная для предсказания через через сервис инференса ClearML.
    - Возможные улучшения:
    1. Более точный подбор параметров в пользу увеличения Recall или Precision.
    2. Улушение предобработки данных, сглаживание выбросов.
    3. Применение более эффективных методов балансировки для борьбы с несбалансированными данными.
    4. Подбор более точных метрик.
    5. Повышение скорости обучения модели.
    """

    # Настройки презентации
    with st.sidebar:
        st.header("Настройки презентации")
        theme = st.selectbox(
            "Тема",
            ["black", "white", "league", "beige",
             "sky", "night", "serif", "simple",
             "solarized"]
        )
        height = st.number_input("Высота слайдов", value=500)
        transition = st.selectbox(
            "Переход",
            ["slide", "convex", "concave", "zoom", "none"]
        )
        plugins = st.multiselect(
            "Плагины",
            ["highlight", "katex", "mathjax2", "mathjax3",
             "notes", "search", "zoom"], []
        )

    # Отображение презентации
    rs.slides(
        presentation_markdown,
        height=height,
        theme=theme,
        config={
            "transition": transition,
            "plugins": plugins,
        },
        markdown_props={"data-separator-vertical": "^--$"},
    )
